import React from 'react';
import { motion } from 'framer-motion';
import { Settings, Database, Bell, Shield, Palette, Globe } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { toast } from '@/components/ui/use-toast';

const SettingsPage = () => {
  const handleSettingChange = (setting) => {
    toast({
      title: "üöß ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‚Äî‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏á‡∏ß‡∏•! ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏±‡∏î‡πÑ‡∏õ! üöÄ",
      description: `‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤: ${setting}`,
    });
  };

  const settingCategories = [
    {
      title: '‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ',
      icon: Settings,
      settings: [
        { name: '‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏ö', value: '‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡πà‡∏≠‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', type: 'text' },
        { name: '‡πÄ‡∏Ç‡∏ï‡πÄ‡∏ß‡∏•‡∏≤', value: 'Asia/Bangkok', type: 'select' },
        { name: '‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô', value: 'THB (‡∏ö‡∏≤‡∏ó)', type: 'select' }
      ]
    },
    {
      title: '‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô',
      icon: Bell,
      settings: [
        { name: '‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô', value: true, type: 'toggle' },
        { name: '‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏á‡∏ß‡∏î‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î', value: true, type: 'toggle' },
        { name: '‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏≤‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•', value: false, type: 'toggle' }
      ]
    },
    {
      title: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢',
      icon: Shield,
      settings: [
        { name: '‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏™‡∏≠‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô', value: false, type: 'toggle' },
        { name: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö', value: true, type: 'toggle' },
        { name: '‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô (‡∏ô‡∏≤‡∏ó‡∏µ)', value: '30', type: 'number' }
      ]
    },
    {
      title: '‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
      icon: Database,
      settings: [
        { name: '‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥', value: true, type: 'toggle' },
        { name: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏≠‡∏á (‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)', value: '24', type: 'number' },
        { name: '‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏£‡∏≠‡∏á (‡∏ß‡∏±‡∏ô)', value: '30', type: 'number' }
      ]
    }
  ];

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-2xl font-bold text-gray-900">‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö</h1>
          <p className="text-gray-600">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö</p>
        </div>
      </div>

      <div className="grid gap-6">
        {settingCategories.map((category, index) => {
          const Icon = category.icon;
          return (
            <motion.div
              key={category.title}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: index * 0.1 }}
              className="bg-white rounded-lg shadow-sm border border-gray-200"
            >
              <div className="p-6 border-b border-gray-200">
                <h2 className="text-lg font-semibold text-gray-900 flex items-center gap-3">
                  <Icon className="w-5 h-5" />
                  {category.title}
                </h2>
              </div>
              
              <div className="p-6 space-y-4">
                {category.settings.map((setting, settingIndex) => (
                  <div key={setting.name} className="flex items-center justify-between py-2">
                    <div>
                      <div className="font-medium text-gray-900">{setting.name}</div>
                      {setting.type !== 'toggle' && (
                        <div className="text-sm text-gray-500">‡∏Ñ‡πà‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {setting.value}</div>
                      )}
                    </div>
                    
                    <div>
                      {setting.type === 'toggle' ? (
                        <Button
                          variant={setting.value ? "default" : "outline"}
                          size="sm"
                          onClick={() => handleSettingChange(setting.name)}
                          className={setting.value ? "bg-green-600 hover:bg-green-700" : ""}
                        >
                          {setting.value ? '‡πÄ‡∏õ‡∏¥‡∏î' : '‡∏õ‡∏¥‡∏î'}
                        </Button>
                      ) : (
                        <Button
                          variant="outline"
                          size="sm"
                          onClick={() => handleSettingChange(setting.name)}
                        >
                          ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                        </Button>
                      )}
                    </div>
                  </div>
                ))}
              </div>
            </motion.div>
          );
        })}
      </div>

      <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <h2 className="text-lg font-semibold text-gray-900 mb-4">‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö</h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <Button 
            variant="outline" 
            onClick={() => handleSettingChange('‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•')}
            className="h-auto p-4 flex flex-col items-center gap-2"
          >
            <Database className="w-6 h-6" />
            <span>‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</span>
          </Button>
          
          <Button 
            variant="outline" 
            onClick={() => handleSettingChange('‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏Ñ‡∏ä')}
            className="h-auto p-4 flex flex-col items-center gap-2"
          >
            <Settings className="w-6 h-6" />
            <span>‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏Ñ‡∏ä</span>
          </Button>
          
          <Button 
            variant="outline" 
            onClick={() => handleSettingChange('‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö')}
            className="h-auto p-4 flex flex-col items-center gap-2"
          >
            <Shield className="w-6 h-6" />
            <span>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö</span>
          </Button>
        </div>
      </div>
    </div>
  );
};

export default SettingsPage;